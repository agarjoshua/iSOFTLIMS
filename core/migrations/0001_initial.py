# Generated by Django 4.1.4 on 2023-03-23 13:53

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("academics", "0001_initial"),
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "user_type",
                    models.CharField(
                        choices=[
                            (1, "Admin"),
                            (2, "Staff"),
                            (3, "Student"),
                            (4, "HOD"),
                            (5, "Guardian"),
                            (6, "Teacher"),
                            (7, "Specialuser"),
                        ],
                        default=1,
                        max_length=10,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Institution",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "institution_code",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("name", models.CharField(max_length=30)),
                (
                    "country",
                    django_countries.fields.CountryField(max_length=2, null=True),
                ),
                ("institution_order", models.TextField()),
                ("registration_date", models.DateTimeField(auto_now=True)),
                (
                    "examination_centre_number",
                    models.CharField(max_length=12, null=True),
                ),
                ("institution_location_hierarchy", models.JSONField(null=True)),
                ("institution_cluster", models.TextField()),
                ("institution_category", models.TextField()),
                ("institution_gender_category", models.TextField()),
                ("institution_accomodation_type", models.TextField()),
                (
                    "institution_status",
                    models.CharField(
                        choices=[(1, "Public"), (2, "Private")],
                        default="1",
                        max_length=100,
                    ),
                ),
                (
                    "institution_type",
                    models.CharField(
                        choices=[(1, "Formal"), (2, "Informal")],
                        default="1",
                        max_length=100,
                    ),
                ),
                ("institution_in_ASAL_area", models.BooleanField(default=False)),
                ("institution_residence", models.TextField()),
                ("contact_details", models.JSONField(null=True)),
                ("institution_statutory_numbers", models.JSONField(null=True)),
                ("currency", models.CharField(max_length=20, null=True)),
                ("bank_details", models.JSONField(null=True)),
                ("logo", models.FileField(null=True, upload_to="")),
            ],
        ),
        migrations.CreateModel(
            name="Teacher",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(default="Teacher", max_length=100)),
                ("phonenumber", models.CharField(max_length=12, null=True)),
                ("secondary_phone_number", models.CharField(max_length=12, null=True)),
                ("pin_tax_number", models.CharField(max_length=12, null=True)),
                ("nhif", models.CharField(max_length=12, null=True)),
                ("social_security_number", models.CharField(max_length=12, null=True)),
                (
                    "industrial_training_number",
                    models.CharField(max_length=12, null=True),
                ),
                ("statutory_numbers", models.JSONField(null=True)),
                ("bank_account", models.CharField(max_length=12, null=True)),
                ("secondary_bank_account", models.CharField(max_length=12, null=True)),
                ("bank_details", models.JSONField(null=True)),
                (
                    "contract_type",
                    models.CharField(
                        choices=[
                            (1, "Permanent"),
                            (2, "Long Term"),
                            (3, "Short Term"),
                            (4, "Contracted Labour"),
                            (5, "Probation"),
                        ],
                        default=5,
                        max_length=50,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "admin",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "institution",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="core.institution",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Students",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=100, null=True)),
                (
                    "registration_number",
                    models.CharField(max_length=10, null=True, unique=True),
                ),
                (
                    "index_number",
                    models.CharField(max_length=20, null=True, unique=True),
                ),
                ("profile_pic", models.FileField(null=True, upload_to="")),
                ("address", models.TextField(null=True)),
                ("require_entry_exams", models.BooleanField(default=True)),
                (
                    "type_of_entry_exam",
                    models.CharField(
                        choices=[(1, "Normal"), (2, "Special")],
                        default="1",
                        max_length=10,
                    ),
                ),
                (
                    "registration_type",
                    models.CharField(
                        choices=[(1, "New"), (2, "Continuing")],
                        default="1",
                        max_length=10,
                    ),
                ),
                (
                    "student_type",
                    models.CharField(
                        choices=[(1, "Local"), (2, "International")],
                        default="1",
                        max_length=10,
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[("1", "Male"), ("2", "Female")],
                        default="1",
                        max_length=10,
                    ),
                ),
                (
                    "account_status",
                    models.CharField(
                        choices=[
                            (1, "Active"),
                            (2, "Inactive"),
                            (3, "On-Hold"),
                            (4, "Suspended"),
                            (5, "Terminated"),
                        ],
                        default="1",
                        max_length=10,
                    ),
                ),
                (
                    "academic_status",
                    models.CharField(
                        choices=[
                            (1, "Active"),
                            (2, "Inactive"),
                            (3, "On-Hold"),
                            (4, "Suspended"),
                            (5, "Terminated"),
                        ],
                        default="1",
                        max_length=10,
                    ),
                ),
                (
                    "study_type",
                    models.CharField(
                        choices=[(1, "Full Time"), (2, "Part Time"), (3, "Online")],
                        default="1",
                        max_length=10,
                    ),
                ),
                (
                    "boarding_type",
                    models.CharField(
                        choices=[(1, "Boarder"), (2, "Day-Scholer")],
                        default="1",
                        max_length=10,
                    ),
                ),
                (
                    "sponsorship_type",
                    models.CharField(
                        choices=[(1, "Self-Sponsored"), (2, "Sponsored")],
                        default="1",
                        max_length=10,
                    ),
                ),
                (
                    "sponsor_type",
                    models.CharField(
                        choices=[
                            (1, "Government"),
                            (2, "Organizations"),
                            (3, "Sponsor"),
                        ],
                        default="1",
                        max_length=10,
                    ),
                ),
                (
                    "special_needs",
                    models.CharField(
                        choices=[
                            (1, "Physically Impaired"),
                            (2, "Visually Impaired"),
                            (3, "Hearing Impaired"),
                            (4, "Intellectually Impaired"),
                            (5, "Multiple Disabilities"),
                            (6, "Other Impairment"),
                        ],
                        default="1",
                        max_length=100,
                    ),
                ),
                ("relationships", models.JSONField(null=True)),
                ("religion", models.CharField(max_length=20, null=True)),
                ("require_transport", models.BooleanField(default=False)),
                ("bio_data", models.JSONField(null=True)),
                ("student_contact", models.JSONField(null=True)),
                ("sponsor_contact", models.JSONField(null=True)),
                (
                    "fee_balance",
                    models.DecimalField(decimal_places=2, default=0, max_digits=20),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "admin",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "institution",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="core.institution",
                    ),
                ),
                (
                    "session_year_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="academics.session",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Staff",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=100, null=True)),
                ("address", models.TextField()),
                (
                    "staff_type",
                    models.CharField(
                        choices=[(1, "Administration"), (2, "Support")],
                        default=1,
                        max_length=50,
                    ),
                ),
                (
                    "contract_type",
                    models.CharField(
                        choices=[
                            (1, "Permanent"),
                            (2, "Long Term"),
                            (3, "Short Term"),
                            (4, "Contracted Labour"),
                            (5, "Probation"),
                        ],
                        default=5,
                        max_length=50,
                    ),
                ),
                ("description", models.CharField(max_length=255, null=True)),
                (
                    "contract_years",
                    models.CharField(default="Parmanent", max_length=255),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "admin",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "institution",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="core.institution",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SpecialUser",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("phonenumber", models.CharField(max_length=12)),
                (
                    "admin",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="HOD",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "contract_type",
                    models.CharField(
                        choices=[
                            (1, "Permanent"),
                            (2, "Long Term"),
                            (3, "Short Term"),
                            (4, "Contracted Labour"),
                            (5, "Probation"),
                        ],
                        default=5,
                        max_length=50,
                    ),
                ),
                ("phonenumber", models.CharField(max_length=12)),
                (
                    "admin",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "institution",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="core.institution",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Guardian",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("phonenumber", models.CharField(max_length=12)),
                ("bank", models.CharField(max_length=1000, null=True)),
                ("gender", models.CharField(max_length=50)),
                (
                    "admin",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Department",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "institution_code",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("name", models.CharField(max_length=30)),
                (
                    "description",
                    models.CharField(default="institution", max_length=255, null=True),
                ),
                (
                    "deputy",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="core.staff",
                    ),
                ),
                (
                    "head",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="core.hod",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Admin",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "admin",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "institution",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="core.institution",
                    ),
                ),
            ],
        ),
    ]
